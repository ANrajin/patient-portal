// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PatientPortal.Api.Contexts;

#nullable disable

namespace PatientPortal.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240225174608_CreateApplicationTables")]
    partial class CreateApplicationTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PatientPortal.Api.Entities.AllergiesDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AllergyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AllergyId");

                    b.HasIndex("PatientId");

                    b.ToTable("AllergiesDetails", (string)null);
                });

            modelBuilder.Entity("PatientPortal.Api.Entities.Allergy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Allergies", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 25, 11, 30, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Name = "Drugs - Penicillin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 2, 25, 11, 30, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Name = "Drug - Others"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 2, 25, 11, 30, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Name = "Animals"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 2, 25, 11, 30, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Name = "Food"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 2, 25, 11, 30, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Name = "Oinments"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 2, 25, 11, 30, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Name = "Plant"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 2, 25, 11, 30, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Name = "Sprays"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 2, 25, 11, 30, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Name = "Others"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 2, 25, 11, 30, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Name = "No Allergies"
                        });
                });

            modelBuilder.Entity("PatientPortal.Api.Entities.DiseaseInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DiseaseInformations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 25, 11, 30, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Name = "Hypertension"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 2, 25, 11, 30, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Name = "Influenza"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 2, 25, 11, 30, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Name = "Arthritis"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 2, 25, 11, 30, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Name = "Migraine"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 2, 25, 11, 30, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Name = "Coronary Artery Disease"
                        });
                });

            modelBuilder.Entity("PatientPortal.Api.Entities.NCD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("NCDs", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 25, 11, 30, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Name = "Asthma"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 2, 25, 11, 30, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Name = "Cancer"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 2, 25, 11, 30, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Name = "Disorders of ear"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 2, 25, 11, 30, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Name = "Disorder of eye"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 2, 25, 11, 30, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Name = "Mental illness"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 2, 25, 11, 30, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            Name = "Oral health problems"
                        });
                });

            modelBuilder.Entity("PatientPortal.Api.Entities.NCDDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("NCDId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NCDId");

                    b.HasIndex("PatientId");

                    b.ToTable("NCDDetails", (string)null);
                });

            modelBuilder.Entity("PatientPortal.Api.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsEpilepsy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Patients", (string)null);
                });

            modelBuilder.Entity("PatientPortal.Api.Entities.AllergiesDetail", b =>
                {
                    b.HasOne("PatientPortal.Api.Entities.Allergy", "Allergy")
                        .WithMany()
                        .HasForeignKey("AllergyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PatientPortal.Api.Entities.Patient", "Patient")
                        .WithMany("AllergiesDetails")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Allergy");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("PatientPortal.Api.Entities.NCDDetail", b =>
                {
                    b.HasOne("PatientPortal.Api.Entities.NCD", "NCD")
                        .WithMany()
                        .HasForeignKey("NCDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PatientPortal.Api.Entities.Patient", "Patient")
                        .WithMany("NCDDetails")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NCD");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("PatientPortal.Api.Entities.Patient", b =>
                {
                    b.Navigation("AllergiesDetails");

                    b.Navigation("NCDDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
